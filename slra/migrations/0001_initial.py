# Generated by Django 5.1.6 on 2025-03-10 06:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LLMProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Provider name, e.g., 'Ollama', 'together.ai', 'OpenAI'.", max_length=255, unique=True)),
                ('base_url', models.URLField(blank=True, help_text='Optional base URL or endpoint for API calls.', null=True)),
                ('description', models.TextField(blank=True, help_text='Short description of this provider or service.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, help_text="Data source (e.g., 'Google Scholar', 'PubMed').", max_length=255, null=True)),
                ('url', models.URLField(blank=True, help_text='Direct link to the paper if available.', max_length=2000, null=True)),
                ('title', models.TextField(help_text='Full title of the study.')),
                ('abstract', models.TextField(blank=True, help_text='Study abstract.', null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma-separated or free-form keywords from the study.', null=True)),
                ('venue', models.CharField(blank=True, help_text='Conference or journal name.', max_length=255, null=True)),
                ('venue_quality', models.CharField(blank=True, help_text='Venue quality metric (e.g., SJR rank).', max_length=50, null=True)),
                ('publication_type', models.CharField(blank=True, help_text='Type of publication (journal, conference, book chapter).', max_length=255, null=True)),
                ('publication_year', models.PositiveIntegerField(blank=True, help_text='Year of publication.', null=True)),
                ('citations', models.PositiveIntegerField(blank=True, help_text='Number of citations reported.', null=True)),
                ('relevancy_level', models.CharField(choices=[('H', 'High'), ('M', 'Medium'), ('L', 'Low'), ('N', 'Not Evaluated')], default='N', help_text='Overall relevancy level after initial screening.', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_string', models.TextField(help_text='The exact query string used for searching digital libraries.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this query was recorded.')),
            ],
        ),
        migrations.CreateModel(
            name='SystematicReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique name/title for this systematic review.', max_length=255, unique=True)),
                ('problem_statement', models.TextField(blank=True, help_text='High-level description of the problem domain.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated.')),
            ],
        ),
        migrations.CreateModel(
            name='LLMModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(help_text="The name or identifier for the LLM, e.g., 'llama3.1'.", max_length=255)),
                ('version', models.CharField(blank=True, help_text="Version tag if applicable (e.g., 'v3.1', 'GPT-3.5').", max_length=50, null=True)),
                ('usage_method', models.CharField(blank=True, help_text="Method of usage, e.g., 'local Docker', 'API call', etc.", max_length=255, null=True)),
                ('credentials', models.TextField(blank=True, help_text='Any credentials needed. Use a secure storage approach in production!', null=True)),
                ('usage_instructions', models.TextField(blank=True, help_text='Documentation or instructions on how to call this model.', null=True)),
                ('provider', models.ForeignKey(help_text='The provider platform for this LLM.', on_delete=django.db.models.deletion.CASCADE, related_name='models', to='slra.llmprovider')),
            ],
            options={
                'unique_together': {('provider', 'model_name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='RelevancyEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluator', models.CharField(blank=True, help_text='Name or ID of the person/system performing the evaluation.', max_length=255, null=True)),
                ('relevancy', models.CharField(choices=[('H', 'High'), ('M', 'Medium'), ('L', 'Low'), ('X', 'Exclude')], default='H', help_text='Final relevancy decision made by the evaluator.', max_length=1)),
                ('notes', models.TextField(blank=True, help_text='Any notes or rationale for the relevancy decision.', null=True)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this evaluation was recorded.')),
                ('primary_study', models.ForeignKey(help_text='Reference to the study being evaluated.', on_delete=django.db.models.deletion.CASCADE, related_name='relevancy_evaluations', to='slra.primarystudy')),
            ],
        ),
        migrations.CreateModel(
            name='DigitalLibrarySearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('library_name', models.CharField(help_text='Name of the digital library (ACM, ScienceDirect, etc.).', max_length=255)),
                ('search_date', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this search was performed.')),
                ('total_results_found', models.PositiveIntegerField(default=0, help_text='Number of results returned by the library for this query.')),
                ('search_query', models.ForeignKey(help_text='The query that was used for this library search.', on_delete=django.db.models.deletion.CASCADE, related_name='library_searches', to='slra.searchquery')),
            ],
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='Link to the publication or resource.', max_length=2000)),
                ('title', models.TextField(blank=True, help_text='Title of the publication.', null=True)),
                ('authors', models.TextField(blank=True, help_text='Authors listed for the publication.', null=True)),
                ('abstract', models.TextField(blank=True, help_text='Abstract or summary of the publication.', null=True)),
                ('library_search', models.ForeignKey(help_text='The digital library search that returned this result.', on_delete=django.db.models.deletion.CASCADE, related_name='search_results', to='slra.digitallibrarysearch')),
            ],
        ),
        migrations.AddField(
            model_name='searchquery',
            name='systematic_review',
            field=models.ForeignKey(help_text='Link to the parent systematic review.', on_delete=django.db.models.deletion.CASCADE, related_name='search_queries', to='slra.systematicreview'),
        ),
        migrations.CreateModel(
            name='ResearchQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text='Full text of the research question.')),
                ('systematic_review', models.ForeignKey(help_text='Link to the parent systematic review.', on_delete=django.db.models.deletion.CASCADE, related_name='research_questions', to='slra.systematicreview')),
            ],
        ),
        migrations.AddField(
            model_name='primarystudy',
            name='systematic_review',
            field=models.ForeignKey(help_text='Link to the parent systematic review.', on_delete=django.db.models.deletion.CASCADE, related_name='primary_studies', to='slra.systematicreview'),
        ),
        migrations.CreateModel(
            name='LLMQueryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.PositiveSmallIntegerField(choices=[(1, 'Problem Formulation'), (2, 'Initial Hypotheses'), (3, 'Initial Data Collection'), (4, 'Query String Definition'), (5, 'Digital Library Exploration'), (6, 'Relevancy Evaluation')], help_text='Which step or phase of the review does this query pertain to?')),
                ('prompt_text', models.TextField(help_text='Full text of the prompt or question sent to the LLM.')),
                ('response_text', models.TextField(blank=True, help_text="LLM's response to the prompt.", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this query was made.')),
                ('llm_model', models.ForeignKey(help_text='Which LLM model was used for this query?', null=True, on_delete=django.db.models.deletion.SET_NULL, to='slra.llmmodel')),
                ('systematic_review', models.ForeignKey(help_text='Systematic review context for this query.', on_delete=django.db.models.deletion.CASCADE, related_name='llm_query_logs', to='slra.systematicreview')),
            ],
        ),
        migrations.CreateModel(
            name='HypothesisKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(help_text='The keyword or phrase relevant to initial hypotheses.', max_length=255)),
                ('systematic_review', models.ForeignKey(help_text='Link to the parent systematic review.', on_delete=django.db.models.deletion.CASCADE, related_name='hypothesis_keywords', to='slra.systematicreview')),
            ],
        ),
    ]
